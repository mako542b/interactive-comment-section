{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react-playground\\\\src\\\\AddComment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport newComment from './newComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddComment = _ref => {\n  _s();\n\n  let {\n    setComments,\n    comments,\n    actionType,\n    parentId,\n    commentId,\n    setActiveComment,\n    replyingTo,\n    textBody = '',\n    editingComment,\n    setEditingComment,\n    comment,\n    updateComment,\n    setIsUpdated\n  } = _ref;\n  const [text, setText] = useState(textBody);\n  let editOn = actionType === 'edit';\n\n  const add = e => {\n    e.preventDefault();\n    let id = parentId ? parentId : commentId;\n    let comm = newComment(text, id, replyingTo);\n\n    if (actionType === 'newComment') {\n      let updatedComments = [...comments, comm];\n      setComments(updatedComments);\n    } else if (actionType === 'reply') {\n      let updatedComments = comments.map(comment => {\n        if (comment.id === id) {\n          comment.replies = [...comment.replies, comm];\n          return comment;\n        } else {\n          return comment;\n        }\n      });\n      setComments(updatedComments);\n    }\n\n    setText('');\n    setActiveComment(null);\n  };\n\n  const minEdit = e => {\n    setEditingComment(null);\n  };\n\n  const updateClick = () => {\n    setIsUpdated(true);\n    updateComment(comment, text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: add,\n    className: \"add-comment white-bkg\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img avatar comment-av\",\n      src: \"./images/avatars/image-amyrobson.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea\",\n      name: \"comment\",\n      id: \"cmt\",\n      placeholder: \"Add a comment...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this), !editOn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-reset blue-bkg clr-white send-btn\",\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this), editOn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-reset blue-bkg clr-white send-btn\",\n      onClick: updateClick,\n      children: \"update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }, this), editOn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-reset send-btn\",\n      onClick: minEdit,\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddComment, \"NI876GLoKuLs6RQv2sqKQf9rZQM=\");\n\n_c = AddComment;\nexport default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["useState","newComment","AddComment","setComments","comments","actionType","parentId","commentId","setActiveComment","replyingTo","textBody","editingComment","setEditingComment","comment","updateComment","setIsUpdated","text","setText","editOn","add","e","preventDefault","id","comm","updatedComments","map","replies","minEdit","updateClick","target","value"],"sources":["C:/Users/HP/Desktop/react-playground/src/AddComment.js"],"sourcesContent":["import { useState } from 'react'\r\nimport newComment from './newComment'\r\n\r\nconst AddComment = ({\r\n        setComments, \r\n        comments,\r\n        actionType,\r\n        parentId,\r\n        commentId,\r\n        setActiveComment,\r\n        replyingTo,\r\n        textBody='',\r\n        editingComment,\r\n        setEditingComment,\r\n        comment,\r\n        updateComment,\r\n        setIsUpdated\r\n    }) => {\r\n\r\nconst[text, setText] = useState(textBody)\r\n\r\nlet editOn = actionType === 'edit'\r\n\r\nconst add = (e) => {\r\n    e.preventDefault()\r\n    let id = parentId ? parentId : commentId\r\n    let comm = newComment(text,id,replyingTo)\r\n    if(actionType === 'newComment'){\r\n    let updatedComments = [...comments,comm];\r\n    setComments(updatedComments)\r\n    }   else if(actionType === 'reply'){\r\n    let updatedComments = comments.map(comment => {\r\n        if(comment.id === id){\r\n            comment.replies = [...comment.replies,comm]\r\n            return comment\r\n        }   else  {\r\n            return comment\r\n        }\r\n    })\r\n    setComments(updatedComments)\r\n    }\r\n    setText('')\r\n    setActiveComment(null)\r\n}\r\n\r\nconst minEdit = (e) => {\r\n    setEditingComment(null)\r\n}\r\n\r\nconst updateClick = () => {\r\n    setIsUpdated(true)\r\n    updateComment(comment,text)\r\n}\r\n\r\n    return (\r\n    <form onSubmit={add} className=\"add-comment white-bkg\">\r\n             <img className=\"img avatar comment-av\" src=\"./images/avatars/image-amyrobson.png\" alt=\"\"/>\r\n             <textarea className=\"textarea\" name=\"comment\" id=\"cmt\" placeholder=\"Add a comment...\" value={text} onChange={(e)=>setText(e.target.value)}></textarea>\r\n            {!editOn && <button className=\"btn-reset blue-bkg clr-white send-btn\">send</button>}\r\n            {editOn && <button className=\"btn-reset blue-bkg clr-white send-btn\" onClick={updateClick}>update</button>}\r\n         {editOn && <button className=\"btn-reset send-btn\" onClick={minEdit}>cancel</button>}\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default AddComment;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAU,GAAG,QAcT;EAAA;;EAAA,IAdU;IACZC,WADY;IAEZC,QAFY;IAGZC,UAHY;IAIZC,QAJY;IAKZC,SALY;IAMZC,gBANY;IAOZC,UAPY;IAQZC,QAAQ,GAAC,EARG;IASZC,cATY;IAUZC,iBAVY;IAWZC,OAXY;IAYZC,aAZY;IAaZC;EAbY,CAcV;EAEV,MAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAACU,QAAD,CAA/B;EAEA,IAAIQ,MAAM,GAAGb,UAAU,KAAK,MAA5B;;EAEA,MAAMc,GAAG,GAAIC,CAAD,IAAO;IACfA,CAAC,CAACC,cAAF;IACA,IAAIC,EAAE,GAAGhB,QAAQ,GAAGA,QAAH,GAAcC,SAA/B;IACA,IAAIgB,IAAI,GAAGtB,UAAU,CAACe,IAAD,EAAMM,EAAN,EAASb,UAAT,CAArB;;IACA,IAAGJ,UAAU,KAAK,YAAlB,EAA+B;MAC/B,IAAImB,eAAe,GAAG,CAAC,GAAGpB,QAAJ,EAAamB,IAAb,CAAtB;MACApB,WAAW,CAACqB,eAAD,CAAX;IACC,CAHD,MAGS,IAAGnB,UAAU,KAAK,OAAlB,EAA0B;MACnC,IAAImB,eAAe,GAAGpB,QAAQ,CAACqB,GAAT,CAAaZ,OAAO,IAAI;QAC1C,IAAGA,OAAO,CAACS,EAAR,KAAeA,EAAlB,EAAqB;UACjBT,OAAO,CAACa,OAAR,GAAkB,CAAC,GAAGb,OAAO,CAACa,OAAZ,EAAoBH,IAApB,CAAlB;UACA,OAAOV,OAAP;QACH,CAHD,MAGU;UACN,OAAOA,OAAP;QACH;MACJ,CAPqB,CAAtB;MAQAV,WAAW,CAACqB,eAAD,CAAX;IACC;;IACDP,OAAO,CAAC,EAAD,CAAP;IACAT,gBAAgB,CAAC,IAAD,CAAhB;EACH,CApBD;;EAsBA,MAAMmB,OAAO,GAAIP,CAAD,IAAO;IACnBR,iBAAiB,CAAC,IAAD,CAAjB;EACH,CAFD;;EAIA,MAAMgB,WAAW,GAAG,MAAM;IACtBb,YAAY,CAAC,IAAD,CAAZ;IACAD,aAAa,CAACD,OAAD,EAASG,IAAT,CAAb;EACH,CAHD;;EAKI,oBACA;IAAM,QAAQ,EAAEG,GAAhB;IAAqB,SAAS,EAAC,uBAA/B;IAAA,wBACS;MAAK,SAAS,EAAC,uBAAf;MAAuC,GAAG,EAAC,sCAA3C;MAAkF,GAAG,EAAC;IAAtF;MAAA;MAAA;MAAA;IAAA,QADT,eAES;MAAU,SAAS,EAAC,UAApB;MAA+B,IAAI,EAAC,SAApC;MAA8C,EAAE,EAAC,KAAjD;MAAuD,WAAW,EAAC,kBAAnE;MAAsF,KAAK,EAAEH,IAA7F;MAAmG,QAAQ,EAAGI,CAAD,IAAKH,OAAO,CAACG,CAAC,CAACS,MAAF,CAASC,KAAV;IAAzH;MAAA;MAAA;MAAA;IAAA,QAFT,EAGS,CAACZ,MAAD,iBAAW;MAAQ,SAAS,EAAC,uCAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHpB,EAISA,MAAM,iBAAI;MAAQ,SAAS,EAAC,uCAAlB;MAA0D,OAAO,EAAEU,WAAnE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJnB,EAKMV,MAAM,iBAAI;MAAQ,SAAS,EAAC,oBAAlB;MAAuC,OAAO,EAAES,OAAhD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AASH,CA5DD;;GAAMzB,U;;KAAAA,U;AA8DN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}