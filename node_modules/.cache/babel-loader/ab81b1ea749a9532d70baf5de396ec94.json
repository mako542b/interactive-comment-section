{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react-playground\\\\src\\\\AddComment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport newComment from './newComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddComment = _ref => {\n  _s();\n\n  let {\n    setCommentsContent,\n    commentsContent,\n    actionType,\n    parentId,\n    commentId,\n    setActiveComment,\n    replyingTo\n  } = _ref;\n  const [text, setText] = useState([]);\n\n  const add = e => {\n    e.preventDefault();\n    let id = parentId ? parentId : commentId;\n    let comm = newComment(text, id, replyingTo);\n\n    if (actionType === 'newComment') {\n      let updatedCommentsContent = [...commentsContent, comm];\n      setCommentsContent(updatedCommentsContent);\n    } else if (actionType === 'reply') {\n      let id = parentId ? parentId : commentId;\n      console.log(id);\n      let updatedCommentsContent = commentsContent.map(comment => {\n        if (comment.id === id) {\n          comment.replies = [...comment.replies, comm];\n          return comment;\n        } else {\n          return comment;\n        }\n      });\n      setCommentsContent(updatedCommentsContent);\n    }\n\n    setText('');\n    setActiveComment(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: add,\n    className: \"add-comment white-bkg\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img avatar comment-av\",\n      src: \"./images/avatars/image-maxblagun.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea\",\n      name: \"comment\",\n      id: \"cmt\",\n      placeholder: \"Add a comment...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-reset blue-bkg clr-white send-btn\",\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddComment, \"Ai4pb4Waya64QGFD4RD2xuPpndU=\");\n\n_c = AddComment;\nexport default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"names":["useState","newComment","AddComment","setCommentsContent","commentsContent","actionType","parentId","commentId","setActiveComment","replyingTo","text","setText","add","e","preventDefault","id","comm","updatedCommentsContent","console","log","map","comment","replies","target","value"],"sources":["C:/Users/HP/Desktop/react-playground/src/AddComment.js"],"sourcesContent":["import { useState } from 'react'\r\nimport newComment from './newComment'\r\n\r\nconst AddComment = ({\r\n        setCommentsContent, \r\n        commentsContent,\r\n        actionType,\r\n        parentId,\r\n        commentId,\r\n        setActiveComment,\r\n        replyingTo\r\n    }) => {\r\n\r\nconst[text, setText] = useState([])\r\nconst add = (e) => {\r\n    e.preventDefault()\r\n    let id = parentId? parentId : commentId\r\n    let comm = newComment(text,id,replyingTo)\r\n    if(actionType === 'newComment'){\r\n    let updatedCommentsContent = [...commentsContent,comm];\r\n    setCommentsContent(updatedCommentsContent)\r\n    }   else if(actionType === 'reply'){\r\n        let id = parentId? parentId : commentId\r\n        console.log(id)\r\n    let updatedCommentsContent = commentsContent.map(comment => {\r\n        if(comment.id === id){\r\n            comment.replies = [...comment.replies,comm]\r\n            return comment\r\n        }   else  {\r\n            return comment\r\n        }\r\n    })\r\n    setCommentsContent(updatedCommentsContent)\r\n    }\r\n    setText('')\r\n    setActiveComment(null)\r\n}\r\n\r\n    return (\r\n    <form onSubmit={add} className=\"add-comment white-bkg\">\r\n             <img className=\"img avatar comment-av\" src=\"./images/avatars/image-maxblagun.png\" alt=\"\"/>\r\n             <textarea className=\"textarea\" name=\"comment\" id=\"cmt\" placeholder=\"Add a comment...\" value={text} onChange={(e)=>setText(e.target.value)}></textarea>\r\n             <button className=\"btn-reset blue-bkg clr-white send-btn\">send</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default AddComment;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAU,GAAG,QAQT;EAAA;;EAAA,IARU;IACZC,kBADY;IAEZC,eAFY;IAGZC,UAHY;IAIZC,QAJY;IAKZC,SALY;IAMZC,gBANY;IAOZC;EAPY,CAQV;EAEV,MAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAA/B;;EACA,MAAMY,GAAG,GAAIC,CAAD,IAAO;IACfA,CAAC,CAACC,cAAF;IACA,IAAIC,EAAE,GAAGT,QAAQ,GAAEA,QAAF,GAAaC,SAA9B;IACA,IAAIS,IAAI,GAAGf,UAAU,CAACS,IAAD,EAAMK,EAAN,EAASN,UAAT,CAArB;;IACA,IAAGJ,UAAU,KAAK,YAAlB,EAA+B;MAC/B,IAAIY,sBAAsB,GAAG,CAAC,GAAGb,eAAJ,EAAoBY,IAApB,CAA7B;MACAb,kBAAkB,CAACc,sBAAD,CAAlB;IACC,CAHD,MAGS,IAAGZ,UAAU,KAAK,OAAlB,EAA0B;MAC/B,IAAIU,EAAE,GAAGT,QAAQ,GAAEA,QAAF,GAAaC,SAA9B;MACAW,OAAO,CAACC,GAAR,CAAYJ,EAAZ;MACJ,IAAIE,sBAAsB,GAAGb,eAAe,CAACgB,GAAhB,CAAoBC,OAAO,IAAI;QACxD,IAAGA,OAAO,CAACN,EAAR,KAAeA,EAAlB,EAAqB;UACjBM,OAAO,CAACC,OAAR,GAAkB,CAAC,GAAGD,OAAO,CAACC,OAAZ,EAAoBN,IAApB,CAAlB;UACA,OAAOK,OAAP;QACH,CAHD,MAGU;UACN,OAAOA,OAAP;QACH;MACJ,CAP4B,CAA7B;MAQAlB,kBAAkB,CAACc,sBAAD,CAAlB;IACC;;IACDN,OAAO,CAAC,EAAD,CAAP;IACAH,gBAAgB,CAAC,IAAD,CAAhB;EACH,CAtBD;;EAwBI,oBACA;IAAM,QAAQ,EAAEI,GAAhB;IAAqB,SAAS,EAAC,uBAA/B;IAAA,wBACS;MAAK,SAAS,EAAC,uBAAf;MAAuC,GAAG,EAAC,sCAA3C;MAAkF,GAAG,EAAC;IAAtF;MAAA;MAAA;MAAA;IAAA,QADT,eAES;MAAU,SAAS,EAAC,UAApB;MAA+B,IAAI,EAAC,SAApC;MAA8C,EAAE,EAAC,KAAjD;MAAuD,WAAW,EAAC,kBAAnE;MAAsF,KAAK,EAAEF,IAA7F;MAAmG,QAAQ,EAAGG,CAAD,IAAKF,OAAO,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV;IAAzH;MAAA;MAAA;MAAA;IAAA,QAFT,eAGS;MAAQ,SAAS,EAAC,uCAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHT;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAOH,CA1CD;;GAAMtB,U;;KAAAA,U;AA4CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}